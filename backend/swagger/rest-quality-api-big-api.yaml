swagger: '2.0'
info:
  title: REST-API Quality API
  description: API for determing the Quality of REST APIs
  version: 1.0.0
host: quality.rest.patrickbuchner.at
schemes:
  - http
  - https
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /files:
    post:
      summary: Upload a file
      parameters:
        - name: file
          in: body
          description: The file to upload
          required: true
          schema:
            $ref: '#/definitions/FileUpload'
      tags:
        - Files API
      responses:
        '200':
          description: Documents successfully uploaded
          schema:
            $ref: '#/definitions/FileDescription'
        '400':
          description: Bad Request (e.g. not a json, required fields not available (title, version))
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    get:
      summary: Get all Files
      tags:
        - Files API
      responses:
        '200':
          description: Available Files
          schema:
            type: array
            items:
              $ref: '#/definitions/FileDescription'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Delete all files
      tags:
        - Files API
      responses:
        '200':
          description: All files have been deleted
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /apis:
    get:
      summary: Get all available documents
      tags:
        - API Documents
      responses:
        '200':
          description: Returned Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Api'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new documents
      parameters:
        - name: apis
          in: body
          description: The documents to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Documents successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all documents
      tags:
        - API Documents
      responses:
        '200':
          description: Documents successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
  /apis/{api}:
    get:
      summary: Returns details about a document
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Requested Document successfully returned
          schema:
            $ref: '#/definitions/Api'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    put:
      summary: Modifies the given document
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
        - name: record
          in: body
          description: Document that should replace the existing one
          required: true
          schema:
            $ref: '#/definitions/ApiCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Requested Document successfully updated
          schema:
            $ref: '#/definitions/UpdateSuccess'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes a document
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Document successfully deleted
          schema:
            $ref: '#/definitions/UpdateSuccess'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /apis/{api}/versions:
    get:
      summary: Returns all API versions for a given document
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry returned
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
        '404':
          description: Given document id not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new versions
      parameters:
        - name: versions
          in: body
          description: The versions to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/VersionCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Versions successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all versions of this document
      tags:
        - API Documents
      responses:
        '200':
          description: Versions successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
  /apis/{api}/version/{version}:
    get:
      summary: Returns details about a specific API version
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
        - name: version
          in: path
          type: string
          description: Version id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Document version successfully returned
          schema:
            $ref: '#/definitions/Version'
        '404':
          description: Given document id or version id not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    put:
      summary: Modifies the given version
      parameters:
        - name: version
          in: path
          type: string
          description: Version id
          required: true
        - name: version
          in: body
          description: Version that should replace the existing one
          required: true
          schema:
            $ref: '#/definitions/VersionCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Requested Document successfully updated
          schema:
            $ref: '#/definitions/UpdateSuccess'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes a Version
      parameters:
        - name: version
          in: path
          type: string
          description: Version id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Version successfully deleted
          schema:
            $ref: '#/definitions/UpdateSuccess'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /apis/{api}/version/{version}/revisions:
    get:
      summary: Returns all stored revisions (versions) of a specific API version
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
        - name: version
          in: path
          type: string
          description: Version id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Requested revisions for a document version
          schema:
            $ref: '#/definitions/Revision'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new revisions
      parameters:
        - name: revisions
          in: body
          description: The revisions to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/RevisionCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Revisions successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all revisions of this document version
      tags:
        - API Documents
      responses:
        '200':
          description: Revisions successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
  /apis/{api}/version/{version}/revisions/{revision}/reports:
    get:
      summary: Returns all stored revisions (versions) of a specific API version
      parameters:
        - name: api
          in: path
          type: string
          description: Document id
          required: true
        - name: version
          in: path
          type: string
          description: Version id
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Requested revisions for a document version
          schema:
            $ref: '#/definitions/Revision'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new revisions
      parameters:
        - name: revisions
          in: body
          description: The revisions to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/RevisionCreation'
      tags:
        - API Documents
      responses:
        '200':
          description: Revisions successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all revisions of this document version
      tags:
        - API Documents
      responses:
        '200':
          description: Revisions successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
  /analysis/results:
    get:
      summary: Get all available documents
      tags:
        - Quality Analysis Results API
      responses:
        '200':
          description: Returned Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Api'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new documents
      parameters:
        - name: apis
          in: body
          description: The documents to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiCreation'
      tags:
        - Quality Analysis Results API
      responses:
        '200':
          description: Documents successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all documents
      tags:
        - Quality Analysis Results API
      responses:
        '200':
          description: Documents successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
  /analysis/settings:
    get:
      summary: Get all available documents
      tags:
        - Quality Analysis Settings API
      responses:
        '200':
          description: Returned Documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Api'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new documents
      parameters:
        - name: apis
          in: body
          description: The documents to add
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiCreation'
      tags:
        - Quality Analysis Settings API
      responses:
        '200':
          description: Documents successfully added
          schema:
            $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all documents
      tags:
        - Quality Analysis Settings API
      responses:
        '200':
          description: Documents successfully deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/UpdateSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UpdateSuccess'
definitions:
  File:
    type: object
    properties:
      id:
        type: string
        format: uuid
      timestamp:
        type: string
        format: date-time
      swagger:
        type: object
        description: Swagger API Specification
  FileUpload:
    type: object
    required: [swagger]
    properties:
      id:
        type: string
        description: Name of the API (optional)
      swagger:
        type: object
        description: Swagger API Specification
  FileDescription:
    type: object
    properties:
      id:
        type: string
        format: uuid
      timestamp:
        type: string
        format: date-time
  ApiCreation:
    type: object
    properties:
      name:
        type: string
        description: Title of the API
      owner:
        type: string
        description: Owner of the Document (username)
  Api:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Unique Identifier of the document (server-generated)
      name:
        type: string
        description: Title of the API
      owner:
        type: string
        description: Owner of the Document (username)
  VersionCreation:
    type: object
    properties:
      number:
        type: string
        description: API Versioning
        example: 1.0
      document:
        type: string
        format: uuid
        description: ID of the document where the version belongs to
  Version:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Unique Identifier of the API version (server-generated)
      number:
        type: string
        description: API Versioning
        example: 1.0
      document:
        type: string
        format: uuid
        description: ID of the document where the version belongs to
  RevisionCreation:
    type: object
    properties:
      version:
        type: string
        format: uuid
        description: ID of the version where the revision belongs to
      json:
        type: string
        format: json
        description: Swagger JSON Specification
      created:
        type: string
        format: date-time
  Revision:
    type: object
    properties:
      id:
        type: string
        format: uuid
      version:
        type: string
        format: uuid
        description: ID of the version where the revision belongs to
      json:
        type: string
        format: json
        description: Swagger JSON Specification
      created:
        type: string
        format: date-time
  UpdateSuccess:
    type: object
    properties:
      created:
        type: integer
        format: int32
      updated:
        type: integer
        format: int32
      deleted:
        type: integer
        format: int32
  ApplicationError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
