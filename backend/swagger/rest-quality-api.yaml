swagger: '2.0'
info:
  title: REST-API Quality API
  description: API for determing the Quality of REST APIs
  version: 1.0.0
host: quality.rest.patrickbuchner.at
schemes:
  - http
  - https
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      summary: Returns all users
      tags:
        - User
      responses:
        '200':
          description: User Profile
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Registers one or more users
      parameters:
        - name: registration
          in: body
          description: Registration
          schema:
            $ref: '#/definitions/Registration'
          required: true
      tags:
        - User
      responses:
        '200':
          description: Users has been created
          schema:
            $ref: '#/definitions/User'
        '409':
          description: Conflict (A User already exists)
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all users
      tags:
        - User
      responses:
        '200':
          description: Deleted users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /user/{username}:
    get:
      summary: Returns a user
      tags:
        - User
      parameters:
        - name: username
          in: path
          type: string
          description: Unique User ID
          required: true
      responses:
        '200':
          description: Profile information for a given user
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    put:
      summary: Updates a user
      tags:
        - User
      parameters:
        - name: username
          in: path
          type: string
          description: Unique User ID
          required: true
        - name: profile
          in: body
          description: New User Profile that should replace the current user profile
          schema:
            $ref: '#/definitions/User'
          required: true
      responses:
        '200':
          description: The updated User Profle
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes a given User
      tags:
        - User
      parameters:
        - name: username
          in: path
          type: string
          description: Unique User ID
          required: true
      responses:
        '200':
          description: Profile of the deleted user
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /user/login:
    post:
      summary: Logs a user in
      description: |
        Creates a Token for a given User+Password for further API Communication
      parameters:
        - name: login
          in: body
          description: Log-In Credentials
          required: true
          schema:
            $ref: '#/definitions/Login'
      tags:
        - User
      responses:
        '200':
          description: Log-in Successful
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Auth Error
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'  
  /documents:
    get:
      summary: Get all available documents
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry successfully created
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    post:
      summary: Creates one or more new documents
      parameters:
        - name: record
          in: body
          description: Time Tracking Entry
          required: true
          schema:
            $ref: '#/definitions/RecordRequest'
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry successfully created
          schema:
            $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes all documents
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entries deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /document/{document}:
    get:
      summary: Returns details about a document
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry returned
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    put:
      summary: Modifies the given document
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
        - name: record
          in: body
          description: Time Tracking Entry
          required: true
          schema:
            $ref: '#/definitions/RecordRequest'
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry successfully updated
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes a document
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry successfully deleted
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /document/{document}/versions:
    get:
      summary: Returns all API versions for a given document
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry returned
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /document/{document}/version/{version}:
    get:
      summary: Returns details about a specific API version
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
        - name: version
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry returned
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /document/{document}/version/{version}/revisions:
    get:
      summary: Returns details about a specific API version
      parameters:
        - name: document
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
        - name: version
          in: path
          type: string
          description: Unique Time Tracking Entry ID (Format UUID)
          required: true
      tags:
        - API Documents
      responses:
        '200':
          description: Time Tracking Entry returned
          schema:
            $ref: '#/definitions/Record'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /project/all:
    get:
      summary: List all Projects
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Delete all Projects
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  '/project/user/{username}/all':
    get:
      summary: List all Projects where the given username is part of
      parameters:
        - name: username
          in: path
          type: string
          description: Username
          required: true
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        '404':
          description: Given Username not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  /project/new:
    post:
      summary: Creates a new Project
      parameters:
        - name: project
          in: body
          description: Project Creation Request
          required: true
          schema:
            $ref: '#/definitions/ProjectRequest'
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Project successfully created
          schema:
            $ref: '#/definitions/Project'
        '409':
          description: Conflict (Project already exists)
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
  '/project/{id}':
    get:
      summary: Get details about a Project
      parameters:
        - name: id
          in: path
          type: string
          description: Unique Project ID (Format UUID)
          required: true
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Project returned
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    put:
      summary: Modify a Project
      parameters:
        - name: id
          in: path
          type: string
          description: uuid
          required: true
        - name: project
          in: body
          description: Project
          required: true
          schema:
            $ref: '#/definitions/Project'
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Project successfully updated
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
    delete:
      summary: Deletes a Project
      parameters:
        - name: id
          in: path
          type: string
          description: uuid
          required: true
      tags:
        - ProjectManagement
      responses:
        '200':
          description: Project successfully deleted
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: Given ID not found
          schema:
            $ref: '#/definitions/ApplicationError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApplicationError'
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: First name of the user.
      email:
        type: string
        description: Email address of the user
      firstname:
        type: string
        description: Last name of the user.
      lastname:
        type: string
        description: Last name of the user.
  Registration:
    type: object
    properties:
      username:
        type: string
        description: First name of the user.
      password:
        type: string
        description: Password of the user.
      email:
        type: string
        description: Email address of the user
      firstname:
        type: string
        description: Last name of the user.
      lastname:
        type: string
        description: Last name of the user.
  Login:
    type: object
    properties:
      username:
        type: string
        description: Unique User Name
      password:
        type: string
        description: Users Password
  Admin:
    type: object
    properties:
      username:
          type: string
  Success:
    type: object
    properties:
      success:
        type: boolean
  Token:
    type: object
    properties:
      token:
        type: string
      username:
        type: string
  RecordRequest:
    type: object
    properties:
      title:
        type: string
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
      username:
        type: string
      project:
        type: string
        description: uuid
  Record:
    type: object
    properties:
      id:
        type: string
        description: uuid
      title:
        type: string
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
      username:
        type: string
      project:
        type: string
        description: uuid
  ProjectRequest:
    type: object
    properties:
      name:
        type: string
  Project:
    type: object
    properties:
      id:
        type: string
        description: uuid
      name:
        type: string
      members:
        type: array
        items:
          description: username
          type: string
  ApplicationError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
