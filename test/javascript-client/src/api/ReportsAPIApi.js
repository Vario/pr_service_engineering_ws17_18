/**
 * REST-API Quality API
 * API for determing the Quality of REST APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApplicationError', 'model/ComparisonReportRequest', 'model/ComparisonReportResponse', 'model/ViolationReportRequest', 'model/ViolationReportResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ApplicationError'), require('../model/ComparisonReportRequest'), require('../model/ComparisonReportResponse'), require('../model/ViolationReportRequest'), require('../model/ViolationReportResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.RestApiQualityApi) {
      root.RestApiQualityApi = {};
    }
    root.RestApiQualityApi.ReportsAPIApi = factory(root.RestApiQualityApi.ApiClient, root.RestApiQualityApi.ApplicationError, root.RestApiQualityApi.ComparisonReportRequest, root.RestApiQualityApi.ComparisonReportResponse, root.RestApiQualityApi.ViolationReportRequest, root.RestApiQualityApi.ViolationReportResponse);
  }
}(this, function(ApiClient, ApplicationError, ComparisonReportRequest, ComparisonReportResponse, ViolationReportRequest, ViolationReportResponse) {
  'use strict';

  /**
   * ReportsAPI service.
   * @module api/ReportsAPIApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ReportsAPIApi. 
   * @alias module:api/ReportsAPIApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the reportsComparisonPost operation.
     * @callback module:api/ReportsAPIApi~reportsComparisonPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComparisonReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new comparison report
     * @param {module:model/ComparisonReportRequest} file Report Creation
     * @param {module:api/ReportsAPIApi~reportsComparisonPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComparisonReportResponse}
     */
    this.reportsComparisonPost = function(file, callback) {
      var postBody = file;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling reportsComparisonPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ComparisonReportResponse;

      return this.apiClient.callApi(
        '/reports/comparison', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsViolationPost operation.
     * @callback module:api/ReportsAPIApi~reportsViolationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ViolationReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new violation report
     * @param {module:model/ViolationReportRequest} file Report Creation
     * @param {module:api/ReportsAPIApi~reportsViolationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ViolationReportResponse}
     */
    this.reportsViolationPost = function(file, callback) {
      var postBody = file;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling reportsViolationPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ViolationReportResponse;

      return this.apiClient.callApi(
        '/reports/violation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
