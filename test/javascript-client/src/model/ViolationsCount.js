/**
 * REST-API Quality API
 * API for determing the Quality of REST APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.RestApiQualityApi) {
      root.RestApiQualityApi = {};
    }
    root.RestApiQualityApi.ViolationsCount = factory(root.RestApiQualityApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ViolationsCount model module.
   * @module model/ViolationsCount
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ViolationsCount</code>.
   * Violation Count
   * @alias module:model/ViolationsCount
   * @class
   * @param must {Number} 
   * @param should {Number} 
   * @param may {Number} 
   * @param could {Number} 
   * @param hint {Number} 
   */
  var exports = function(must, should, may, could, hint) {
    var _this = this;

    _this['must'] = must;
    _this['should'] = should;
    _this['may'] = may;
    _this['could'] = could;
    _this['hint'] = hint;
  };

  /**
   * Constructs a <code>ViolationsCount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ViolationsCount} obj Optional instance to populate.
   * @return {module:model/ViolationsCount} The populated <code>ViolationsCount</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('must')) {
        obj['must'] = ApiClient.convertToType(data['must'], 'Number');
      }
      if (data.hasOwnProperty('should')) {
        obj['should'] = ApiClient.convertToType(data['should'], 'Number');
      }
      if (data.hasOwnProperty('may')) {
        obj['may'] = ApiClient.convertToType(data['may'], 'Number');
      }
      if (data.hasOwnProperty('could')) {
        obj['could'] = ApiClient.convertToType(data['could'], 'Number');
      }
      if (data.hasOwnProperty('hint')) {
        obj['hint'] = ApiClient.convertToType(data['hint'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} must
   */
  exports.prototype['must'] = undefined;
  /**
   * @member {Number} should
   */
  exports.prototype['should'] = undefined;
  /**
   * @member {Number} may
   */
  exports.prototype['may'] = undefined;
  /**
   * @member {Number} could
   */
  exports.prototype['could'] = undefined;
  /**
   * @member {Number} hint
   */
  exports.prototype['hint'] = undefined;



  return exports;
}));


